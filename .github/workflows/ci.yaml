name: Container Build

on:
  workflow_call:
    inputs:
      container-archs:
        required: true
        type: string
      push-container:
        required: false
        type: boolean
        default: false

env:
  CI_USER: cryostat+bot
  CI_REGISTRY: quay.io/cryostat
  CI_IMG: quay.io/cryostat/cryostat-openshift-console-plugin

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'
      - uses: bahmutov/npm-install@v1
      - run: yarn format

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'
      - uses: bahmutov/npm-install@v1
      - run: yarn lint

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'
      - uses: bahmutov/npm-install@v1
      - run: yarn type-check:plugin

  build-container:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'cryostatio' }}
    steps:
      - name: Add CRIU PPA
        run: sudo add-apt-repository ppa:criu/ppa && sudo apt update
      - name: Install podman 4 and qemu
        run: |
          sudo apt update
          sudo apt -y satisfy "podman (>= 4.0), qemu-user-static"
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Build container
        uses: redhat-actions/buildah-build@v2
        with:
          image: quay.io/cryostat/cryostat-openshift-console-plugin
          tags: latest ${{ github.sha }}
          archs: ${{ inputs.container-archs }}
          containerfiles: |
            ./Dockerfile
      - name: Set tags
        id: image-tags
        run: |
          TAGS=('${{ github.ref_name }}')
          if [ '${{ github.ref }}' == 'refs/heads/main' ]; then
            TAGS+=('latest')
          fi
          echo "::set-output name=tags::${TAGS[@]}"
      - name: Push to registry
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: cryostat-openshift-console-plugin
          tags: ${{ steps.image-tags.outputs.tags }}
          registry: ${{ env.CI_REGISTRY }}
          username: ${{ env.CI_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
